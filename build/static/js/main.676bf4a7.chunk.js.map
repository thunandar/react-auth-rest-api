{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","retrieveStoredToken","useState","settoken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","console","log","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","autCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","history","useHistory","authCtx","newPasswordInputRef","useRef","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","form","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","auth","url","enteredEmail","enteredPassword","email","ok","json","data","Error","expiresIn","toISOString","catch","err","alert","message","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.676bf4a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__vaHCl\",\"control\":\"ProfileForm_control__3naVe\",\"action\":\"ProfileForm_action__2OoXG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__Ncwob\",\"logo\":\"MainNavigation_logo__12Z2n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__3QE_C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__2H33L\"};","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n  const adjExpirationTime = new Date(expirationTime).getTime();\r\n\r\n  const remainingDuration = adjExpirationTime - currentTime;\r\n\r\n  return remainingDuration;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n  const storedToken = localStorage.getItem(\"token\");\r\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\r\n\r\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\r\n\r\n  if (remainingTime <= 3600) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    token: storedToken,\r\n    duration: remainingTime,\r\n  };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveStoredToken();\r\n\r\n  let initialToken;\r\n  if (tokenData) {\r\n    initialToken = tokenData.token;\r\n  }\r\n\r\n  const [token, settoken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const logoutHandler = useCallback(() => {\r\n    settoken(null);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n\r\n    if (logoutTimer) {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, []);\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n    settoken(token);\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expirationTime\", expirationTime);\r\n\r\n    const remainingTime = calculateRemainingTime(expirationTime);\r\n\r\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tokenData) {\r\n      console.log(tokenData.duration);\r\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n    }\r\n  }, [tokenData, logoutHandler]);\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport classes from \"./MainNavigation.module.css\";\nimport AuthContext from \"../../store/auth-context\";\n\nconst MainNavigation = () => {\n  const autCtx = useContext(AuthContext);\n\n  const isLoggedIn = autCtx.isLoggedIn;\n\n  const logoutHandler = () => {\n    autCtx.logout();\n    //redirect the user\n  };\n\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to=\"/auth\">Login</Link>\n            </li>\n          )}\n\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/profile\">Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport classes from \"./ProfileForm.module.css\";\nimport AuthContext from \"../../store/auth-context\";\n\nconst ProfileForm = () => {\n  const history = useHistory();\n  const authCtx = useContext(AuthContext);\n  const newPasswordInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    //add validation\n\n    fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCjUDYgbbbUDVz0gKTDYLAM1eOqNQ3g1hw\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: authCtx.token,\n          password: enteredNewPassword,\n          returnSecureToken: false,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then((res) => {\n      // assumption: Always succeeds!\n\n      history.replace(\"/\");\n    });\n  };\n\n  return (\n    <form onSubmit={submitHandler} className={classes.form}>\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input\n          type=\"password\"\n          id=\"new-password\"\n          minLength=\"7\"\n          ref={newPasswordInputRef}\n        />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport classes from \"./AuthForm.module.css\";\nimport AuthContext from \"../../store/auth-context\";\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const autCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCjUDYgbbbUDVz0gKTDYLAM1eOqNQ3g1hw\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCjUDYgbbbUDVz0gKTDYLAM1eOqNQ3g1hw\";\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication failed!\";\n            // if (data && data.error && data.error.message) {\n            //   errorMessage = data.error.message;\n            // }\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n        autCtx.login(data.idToken, expirationTime.toISOString());\n        history.replace(\"/\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Sending request..</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        {!authCtx.isLoggedIn && (\n          <Route path=\"/auth\">\n            <AuthPage />\n          </Route>\n        )}\n        <Route path=\"/profile\">\n          {authCtx.isLoggedIn && <UserProfile />}\n          {!authCtx.isLoggedIn && <Redirect to=\"/auth\" />}\n        </Route>\n\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__1d2lF\",\"control\":\"AuthForm_control__2vbo7\",\"actions\":\"AuthForm_actions__19j4O\",\"toggle\":\"AuthForm_toggle__d81my\"};"],"sourceRoot":""}